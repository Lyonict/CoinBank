{% extends 'user-navigation_base.html.twig' %}

{% form_theme cryptoForm 'themes/form_theme.html.twig' %}

{% block title %}CoinBank - Crypto Form{% endblock %}

{% block user_navigation %}
    {% with {"selected": "dashboard"} %}
        {{ parent() }}
    {% endwith %}
{% endblock %}

{% block content %}
    <div class="CB-form-container-full my-md-3">
        <div class="card-body">
            <div class="CB-form-small mx-auto">
            <h1>{{'Trade'|trans}}</h1>
            {% for message in app.flashes('success') %}
                <div class="alert alert-success">{{ message }}</div>
            {% endfor %}
            {% for message in app.flashes('error') %}
                <div class="alert alert-danger">{{ message }}</div>
            {% endfor %}
            {{ form_errors(cryptoForm) }}
            {{ form_start(cryptoForm) }}
            {{ form_row(cryptoForm.cryptocurrency, {
                label: 'Cryptocurrency'|trans,
                attr: { class: 'form-select' },
                label_attr: { class: 'form-label' },
            }) }}
            <div class="row mb-3">
                {% for child in cryptoForm.transactionType %}
                    <div class="col-6">
                        {{ form_widget(child, {
                        attr: { class: 'btn-check' }
                        }) }}
                        {% if child.vars.value == 'buy' %}
                            {% set labelContent = '<div class="CB-deposit-icon-wrapper d-flex align-items-center me-2">' ~ ux_icon('fa6-solid:arrow-right-to-bracket') ~ '</div>' %}
                            {% set labelName = 'Buy'|trans %}
                        {% else %}
                            {% set labelContent = '<div class="d-flex align-items-center me-2">' ~ ux_icon('fa6-solid:arrow-up-from-bracket') ~ '</div>' %}
                            {% set labelName = 'Sell'|trans %}
                        {% endif %}
                        {{ form_label(child, labelContent ~ ' ' ~ labelName, {
                            label_html: true,
                            label_attr: { class: 'd-flex justify-content-center btn btn-outline-dark' },
                        }) }}
                    </div>
                {% endfor %}
            </div>
            <div class="row">
                <div class="col-12 col-lg-6">
                    {{ form_row(cryptoForm.cryptoAmount, {
                        label: 'Amount(Coin)'|trans,
                        attr: { class: 'form-control' },
                        label_attr: { class: 'form-label' },
                    }) }}
                </div>
                <div class="col-12 col-lg-6">
                    {{ form_row(cryptoForm.dollarAmount, {
                        label: 'Amount($)'|trans,
                        attr: { class: 'form-control' },
                        label_attr: { class: 'form-label' },
                    }) }}
                </div>
            </div>
            <button type="submit" class="btn btn-dark w-100">{{'Proceed'|trans}}</button>
            {{ form_end(cryptoForm) }}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        const cryptoPrices = {{ cryptoPrices|json_encode|raw }};

        document.addEventListener('DOMContentLoaded', function() {
            const selectCryptoField = document.getElementById('crypto_transaction_form_cryptocurrency');
            const cryptoAmountField = document.getElementById('crypto_transaction_form_cryptoAmount');
            const dollarAmountField = document.getElementById('crypto_transaction_form_dollarAmount');

            function updateDollarAmount() {
                const selectedCrypto = selectCryptoField.value;
                const cryptoAmount = parseFloat(cryptoAmountField.value);
                if (!isNaN(cryptoAmount) && isFinite(cryptoAmount)) {
                    dollarAmountField.value = (cryptoAmount * cryptoPrices[selectedCrypto]).toFixed(2);
                }
            }

            function resetAmounts() {
                cryptoAmountField.value = '';
                dollarAmountField.value = '';
            }

            if (cryptoAmountField && dollarAmountField) {
                cryptoAmountField.addEventListener('input', updateDollarAmount);
            }

            if (selectCryptoField) {
                selectCryptoField.addEventListener('change', resetAmounts);
            }
        });
    </script>
{% endblock %}
